{"version":3,"sources":["logo.svg","components/Header.js","components/Note.js","components/Notes.js","components/CreateNote.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Note","props","note","notes","setNotes","onDoubleClick","id","updated","filter","item","console","log","title","body","Notes","length","map","index","CreateNote","useState","setTitle","setBody","style","display","placeholder","value","onChange","e","target","onClick","obj","rows","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YCUAA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,+C,cCmBGC,EAtBF,SAACC,GAEV,IAAOC,EAAuBD,EAAvBC,KAAKC,EAAkBF,EAAlBE,MAAMC,EAAYH,EAAZG,SAYlB,OACI,sBAAKL,UAAU,OAAOM,cAXP,SAACC,GAChB,IAAIC,EAAUJ,EAAMK,QAAO,SAACC,GAGxB,OAFAC,QAAQC,IAAIF,EAAKH,IACjBI,QAAQC,IAAIT,EAAKI,IACVA,EAAG,GAAKG,EAAKH,MAExBI,QAAQC,IAAIJ,GACZH,EAASG,IAIT,UACI,8BAAML,EAAKU,QACX,8BAAMV,EAAKW,WCDRC,EAfD,SAACb,GAEX,IAAME,EAAQF,EAAME,MAEdC,GADOH,EAAMC,KACFD,EAAMG,UAEvB,OACI,qBAAKL,UAAU,kBAAf,SAESI,GAASA,EAAMY,OAAS,EAAKZ,EAAMa,KAAI,SAACd,EAAKe,GAAN,OAAgB,cAAC,EAAD,CAAkBd,MAAOA,EAAOD,KAAMA,EAAME,SAAUA,GAA3Ca,MAA0D,QC2B9HC,EApCI,SAACjB,GAEhB,MAA0BkB,mBAAS,IAAnC,mBAAOhB,EAAP,KAAcC,EAAd,KACA,EAA0Be,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAwBD,mBAAS,IAAjC,mBAAON,EAAP,KAAaQ,EAAb,KAgBA,OACI,qCACI,sBAAKtB,UAAU,cAAf,UACI,sBAAKuB,MAAO,CAACC,QAAQ,QAArB,UACI,uBAAOC,YAAY,QAAQzB,UAAU,QAAQ0B,MAAOb,EAAOc,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOH,UAC9F,qBAAK1B,UAAU,MAAM8B,QAnBlB,WACf,GAAU,IAAPjB,GAAmB,IAANC,EAAhB,CAGA,IAAIiB,EAAM,CACNlB,QACAC,OACAP,GAAKH,EAAMY,OAAS,GAExBX,EAAS,GAAD,mBAAKD,GAAL,CAAW2B,KACnBT,EAAQ,IACRD,EAAS,MAQG,oBAEJ,0BAAUI,YAAY,iBAAiBO,KAAK,IAAIN,MAAOZ,EAAMa,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOH,aAG/FtB,EAAMY,OAAS,EAAI,cAAC,EAAD,CAAOX,SAAUA,EAAUD,MAAOA,EAAOD,KAAM,CAACU,QAAMC,UAAW,SChBrFmB,MAXf,WACE,OACI,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77535df5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='navbar'>\r\n            <div>Notes App</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Note = (props) => {\r\n\r\n    const {note,notes,setNotes} = props\r\n\r\n    const deleteItem = (id) => {\r\n        let updated = notes.filter((item) => {\r\n            console.log(item.id)\r\n            console.log(note.id)\r\n            return id+1 != item.id\r\n        })\r\n        console.log(updated)\r\n        setNotes(updated)\r\n    }\r\n\r\n    return (\r\n        <div className='note' onDoubleClick={deleteItem}>\r\n            <div>{note.title}</div>\r\n            <div>{note.body}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from './Note'\r\n\r\nconst Notes = (props) => {\r\n\r\n    const notes = props.notes\r\n    const note = props.note\r\n    const setNotes = props.setNotes\r\n    \r\n    return (\r\n        <div className='notes-container'>\r\n            {\r\n                (notes && notes.length > 0) ? notes.map((note,index) => <Note key={index} notes={notes} note={note} setNotes={setNotes}/>) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import React,{useState} from 'react'\r\nimport Notes from './Notes'\r\n\r\nconst CreateNote = (props) => {\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n\r\n    const addHandler = () => {\r\n        if(title=='' || body==''){\r\n            return;\r\n        }\r\n        let obj = {\r\n            title,\r\n            body,\r\n            id : notes.length + 1\r\n        }\r\n        setNotes([...notes,obj])\r\n        setBody('')\r\n        setTitle('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='create-note'>\r\n                <div style={{display:'flex'}}>\r\n                    <input placeholder='Title' className='title' value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                    <div className='add' onClick={addHandler}>add</div>\r\n                </div>\r\n                <textarea placeholder='Take a note...' rows='2' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\r\n            </div>\r\n            {\r\n                notes.length > 0 ? <Notes setNotes={setNotes} notes={notes} note={{title,body}}/> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateNote\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport CreateNote from './components/CreateNote'\nimport Notes from './components/Notes'\n\nfunction App() {\n  return (\n      <>\n        <Header/>\n        <CreateNote/>\n        <Notes/>\n      </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}